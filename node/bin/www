#!/usr/bin/env node

/**
 * Module dependencies.
 */
var app = require('../app');
var http = require('http').Server(app);
var io = require('socket.io')(http);
var models = require('../models');

require('socketio-auth')(io, {
  authenticate: function (socket, data, callback) {
    //get credentials sent by the client
    var token = data.token;
    models.sequelize.sync().then(function () {
      models.Token.findOne({where: {key: token}}).then(function(tokenObj){
        if (!tokenObj) return callback(new Error("Token not found."));
        models.User.findOne({where: {id: tokenObj.user_id}}).then(function(userObj){
          if (!userObj) return callback(new Error("User by token not found."));
          socket.client.user = userObj;
          return callback(null, true);
        });
      })
    });
  }
});

io.on('connection', function(socket){
  console.log('a user connected');
  socket.emit('news', { message: 'Hello, at localhost:3000' });
  socket.on('my other event', function (data) {
    console.log(data);
  });
  socket.on('client-sent-message', function (data) {
    console.log(socket.client.user, data);
  })
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});
